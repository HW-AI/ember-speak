"use strict";define("dummy/app",["exports","ember","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,n,l,a){var s=void 0;t.default.MODEL_FACTORY_INJECTIONS=!0,s=t.default.Application.extend({modulePrefix:a.default.modulePrefix,podModulePrefix:a.default.podModulePrefix,Resolver:n.default}),(0,l.default)(s,a.default.modulePrefix),e.default=s}),define("dummy/components/speakable-component",["exports","ember","dummy/templates/components/speakable-component"],function(e,t,n){function l(){var e=this.get("reader");if(e)e.cancel(),e.destroy(),this.set("reader",null);else{var t=this.get("speechReader"),n=t.getNewReader(this.$().text().trim());this.set("reader",n),n.play()}}e.default=t.default.Component.extend({reader:null,classNames:["well","well-sm"],speechReader:t.default.inject.service(),readingAvailable:t.default.computed.alias("speechReader.isAvailable"),layout:n.default,actions:{togglePlaying:l}})}),define("dummy/controllers/index",["exports","ember"],function(e,t){function n(){this.send("stop"),this.send("reset");var e=this.get("model"),t=this.get("speechRecorder"),n=t.getRecorder();n.on("transcribed",function(t){e.set("transcript",e.get("transcript")+t)}),n.on("error",function(t){e.set("error",t.msg)}),n.start(),e.set("recorder",n)}function l(){this.get("model").setProperties({confidence:"",transcript:"",error:""})}function a(){var e=this.get("model.recorder");e&&e.stop()}function s(){var e=this.get("model.reader");e&&(console.log("destroying"),e.destroy());var t=this.get("speechReader"),n=t.getNewReader(this.get("model.textToRead"));this.set("model.reader",n),n.play()}function i(){this.get("model.reader").pause()}function o(){this.get("model.reader").resume()}var r=t.default.inject.service;e.default=t.default.Controller.extend({speechRecorder:r(),speechReader:r(),actions:{record:n,reset:l,stop:a,read:s,pause:i,resume:o}})}),define("dummy/helpers/app-version",["exports","ember","dummy/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,n,l){function a(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return t.hideSha?s.match(l.versionRegExp)[0]:t.hideVersion?s.match(l.shaRegExp)[0]:s}e.appVersion=a;var s=n.default.APP.version;e.default=t.default.Helper.helper(a)}),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){e.default=t.default}),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){e.default=t.default}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,n){var l=n.default.APP,a=l.name,s=l.version;e.default={name:"App Version",initialize:(0,t.default)(a,s)}}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/data-adapter",["exports","ember"],function(e,t){e.default={name:"data-adapter",before:"store",initialize:function(){}}}),define("dummy/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,t,n){e.default={name:"ember-data",initialize:t.default}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,n){function l(){var e=arguments[1]||arguments[0];if(!1!==n.default.exportApplicationGlobal){var l;if("undefined"!=typeof window)l=window;else if("undefined"!=typeof global)l=global;else{if("undefined"==typeof self)return;l=self}var a,s=n.default.exportApplicationGlobal;a="string"==typeof s?s:t.default.String.classify(n.default.modulePrefix),l[a]||(l[a]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete l[a]}}))}}e.initialize=l,e.default={name:"export-application-global",initialize:l}}),define("dummy/initializers/injectStore",["exports","ember"],function(e,t){e.default={name:"injectStore",before:"store",initialize:function(){}}}),define("dummy/initializers/store",["exports","ember"],function(e,t){e.default={name:"store",after:"ember-data",initialize:function(){}}}),define("dummy/initializers/transforms",["exports","ember"],function(e,t){e.default={name:"transforms",before:"store",initialize:function(){}}}),define("dummy/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,t){e.default={name:"ember-data",initialize:t.default}}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){e.default=t.default}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,n){var l=t.default.Router.extend({location:n.default.locationType,rootURL:n.default.rootURL});l.map(function(){}),e.default=l}),define("dummy/routes/index",["exports","ember"],function(e,t){var n=t.default.inject.service;e.default=t.default.Route.extend({speechRecorder:n(),speechReader:n(),model:function(){var e=this.get("speechRecorder"),n=this.get("speechReader");return e.setLanguage("en-US"),n.setLanguage("en-US"),t.default.Object.create({githubLink:"https://github.com/tsteuwer/ember-speak",travisBadge:"https://travis-ci.org/tsteuwer/ember-speak.svg?branch=master",travisLink:"https://travis-ci.org/tsteuwer/ember-speak",npmBadge:"https://badge.fury.io/js/ember-speak.svg",npmLink:"http://badge.fury.io/js/ember-speak",isAvailable:e.get("isAvailable"),readerAvailable:n.get("isAvailable")})},setupController:function(e,t){e.setProperties({model:t})}})}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/speech-reader",["exports","ember-speak/services/speech-reader"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/speech-recorder",["exports","ember-speak/services/speech-recorder"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"AKY2Sa5S",block:'{"statements":[["append",["unknown",["welcome-page"]],false],["text","\\n"],["text","\\n"],["append",["unknown",["outlet"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/application.hbs"}})}),define("dummy/templates/components/speakable-component",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"Bqqex7U+",block:'{"statements":[["open-element","div",[]],["static-attr","aria-label","Read this article aloud."],["flush-element"],["text","\\n"],["block",["if"],[["get",["readingAvailable"]]],null,1,0],["close-element"],["text","\\n"],["yield","default"],["text","\\n"]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","\\t\\t"],["open-element","div",[]],["static-attr","class","alert alert-warning"],["flush-element"],["text","\\n\\t\\t\\tYour browser doesn\'t support SpeechSynthesis.\\n\\t\\t"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\t\\t"],["open-element","span",[]],["dynamic-attr","class",["concat",["glyphicon glyphicon-",["helper",["if"],[["get",["reader","isPlaying"]],"stop","play"],null]]]],["modifier",["action"],[["get",[null]],"togglePlaying"]],["flush-element"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/components/speakable-component.hbs"}})}),define("dummy/templates/index",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"LYAn/ikQ",block:'{"statements":[["open-element","div",[]],["static-attr","class","container"],["flush-element"],["text","\\n\\t"],["open-element","div",[]],["static-attr","class","pull-right badges"],["flush-element"],["text","\\n\\t\\t"],["open-element","a",[]],["static-attr","class","top-badge"],["dynamic-attr","href",["unknown",["model","npmLink"]],null],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","img",[]],["dynamic-attr","src",["unknown",["model","npmBadge"]],null],["flush-element"],["close-element"],["text","\\n\\t\\t"],["close-element"],["text","\\n\\t\\t"],["open-element","a",[]],["static-attr","class","top-badge"],["dynamic-attr","href",["unknown",["model","travisLink"]],null],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","img",[]],["dynamic-attr","src",["unknown",["model","travisBadge"]],null],["flush-element"],["close-element"],["text","\\n\\t\\t"],["close-element"],["text","\\n\\t\\t"],["open-element","a",[]],["static-attr","class","top-badge github-logo"],["dynamic-attr","href",["unknown",["model","githubLink"]],null],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","img",[]],["static-attr","width","32px"],["static-attr","height","32px"],["static-attr","src","/images/GitHub-Mark-32px-f87561b8bb354ef83b09a66e54f70e08.png"],["flush-element"],["close-element"],["text","\\n\\t\\t"],["close-element"],["text","\\n\\t"],["close-element"],["text","\\n\\t"],["open-element","h1",[]],["flush-element"],["text","Ember Speak"],["close-element"],["text","\\n\\t"],["open-element","div",[]],["static-attr","class","panel panel-default"],["flush-element"],["text","\\n\\t\\t"],["open-element","div",[]],["static-attr","class","panel-heading"],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","strong",[]],["flush-element"],["text","Speech-to-Text Example"],["close-element"],["text","\\n\\t\\t"],["close-element"],["text","\\n\\t\\t"],["open-element","div",[]],["static-attr","class","panel-body"],["flush-element"],["text","\\n"],["block",["unless"],[["get",["model","isAvailable"]]],null,5,4],["text","\\t\\t"],["close-element"],["text","\\n\\t"],["close-element"],["text","\\n\\t"],["open-element","div",[]],["static-attr","class","panel panel-default"],["flush-element"],["text","\\n\\t\\t"],["open-element","div",[]],["static-attr","class","panel-heading"],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","strong",[]],["flush-element"],["text","Text-to-Speech Example"],["close-element"],["text","\\n\\t\\t"],["close-element"],["text","\\n\\t\\t"],["open-element","div",[]],["static-attr","class","panel-body"],["flush-element"],["text","\\n"],["block",["unless"],[["get",["model","readerAvailable"]]],null,2,1],["text","\\t\\t"],["close-element"],["text","\\n\\t"],["close-element"],["text","\\n\\t"],["open-element","div",[]],["static-attr","class","panel panel-default"],["flush-element"],["text","\\n\\t\\t"],["open-element","div",[]],["static-attr","class","panel-heading"],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","strong",[]],["flush-element"],["text","Installation"],["close-element"],["text","\\n\\t\\t"],["close-element"],["text","\\n\\t\\t"],["open-element","div",[]],["static-attr","class","panel-body"],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","div",[]],["flush-element"],["text","\\n\\t\\t\\t\\t"],["open-element","p",[]],["flush-element"],["text","Install the addon."],["close-element"],["text","\\n"],["open-element","pre",[]],["flush-element"],["text","ember install ember-speak"],["close-element"],["text","\\n\\t\\t\\t\\t"],["open-element","p",[]],["flush-element"],["text","Inject the service(s) into whichever object you need it in."],["close-element"],["text","\\n"],["open-element","pre",[]],["flush-element"],["text","import Ember from \'ember\';\\n\\nexport default Route.Controller.extend({\\n\\tspeechRecorder: Ember.inject.service(),\\n\\tspeechReader: Ember.inject.service(),\\n\\tmodel() {\\n\\t\\treturn Ember.Object.create({\\n\\t\\t\\trecorderAvailable: this.get(\'speechRecorder.isAvailable\'),\\n\\t\\t\\treaderAvailable: this.get(\'speechReader.isAvailable\'),\\n\\t\\t});\\n\\t},\\n});"],["close-element"],["text","\\n\\t\\t\\t"],["close-element"],["text","\\n\\t\\t"],["close-element"],["text","\\n\\t"],["close-element"],["text","\\n\\t"],["open-element","div",[]],["static-attr","class","panel panel-default"],["flush-element"],["text","\\n\\t\\t"],["open-element","div",[]],["static-attr","class","panel-heading"],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","strong",[]],["flush-element"],["text","Example: Read Contents Component"],["close-element"],["text","\\n\\t\\t"],["close-element"],["text","\\n\\t\\t"],["open-element","div",[]],["static-attr","class","panel-body"],["flush-element"],["text","\\n\\t\\t\\t"],["open-element","p",[]],["flush-element"],["text","One thing I wish sites did were to allow their articles to be read by my phone. This is now as simple as creating a single component. So, while I\'m on my mobile device, I can hit play and let it read the entire thing to me while I drive. Here\'s an example:"],["close-element"],["text","\\n\\t\\t\\t"],["open-element","strong",[]],["flush-element"],["text","speakable-component: "],["open-element","a",[]],["static-attr","href","https://github.com/tsteuwer/ember-speak/blob/master/tests/dummy/app/components/speakable-component.js"],["flush-element"],["text","JavaScript"],["close-element"],["text",", "],["open-element","a",[]],["static-attr","href","https://github.com/tsteuwer/ember-speak/blob/master/tests/dummy/app/templates/components/speakable-component.hbs"],["flush-element"],["text","Template"],["close-element"],["close-element"],["text","\\n\\t\\t\\t"],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n"],["block",["speakable-component"],null,null,0],["text","\\t\\t"],["close-element"],["text","\\n\\t"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","\\t\\t\\t\\tDolphins are a widely distributed and diverse group of aquatic mammals. They are an informal grouping within the order Cetacea, excluding whales and porpoises, so to zoologists the grouping is paraphyletic. The dolphins comprise the extant families Delphinidae (the oceanic dolphins), Platanistidae (the Indian river dolphins), Iniidae (the new world river dolphins), and Pontoporiidae (the brackish dolphins), and the extinct Lipotidae (baiji or Chinese river dolphin). There are 40 extant species of dolphins. Dolphins, alongside other cetaceans, belong to the clade Cetartiodactyla with even-toed ungulates. Their closest living relatives are the hippopotamuses, having diverged about 40 million years ago.\\n\\t\\t\\t"],["open-element","br",[]],["flush-element"],["close-element"],["text","\\n\\t\\t\\t"],["open-element","a",[]],["static-attr","href","https://en.wikipedia.org/wiki/Dolphin"],["flush-element"],["text","From Wikipedia"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","row"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","col-sm-8 col-md-9"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t"],["append",["helper",["textarea"],null,[["class","value","placeholder"],["form-control",["get",["model","textToRead"]],"Enter some text here..."]]],false],["text","\\n\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","col-sm-4 col-md-3"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","btn-group"],["static-attr","role","group"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t"],["open-element","button",[]],["static-attr","class","btn btn-success"],["modifier",["action"],[["get",[null]],"read"]],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t\\tRead\\n\\t\\t\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t"],["open-element","button",[]],["static-attr","class","btn btn-danger"],["dynamic-attr","disabled",["helper",["unless"],[["get",["model","reader","isPlaying"]],"disabled"],null],null],["modifier",["action"],[["get",[null]],"pause"]],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t\\tPause\\n\\t\\t\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t"],["open-element","button",[]],["static-attr","class","btn"],["dynamic-attr","disabled",["helper",["unless"],[["get",["model","reader","isPaused"]],"disabled"],null],null],["modifier",["action"],[["get",[null]],"resume"]],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t\\tResume\\n\\t\\t\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\t\\t\\t\\t"],["open-element","div",[]],["flush-element"],["text","\\n\\t\\t\\t\\t\\tSpeechUtterance is not available in your browser.\\n\\t\\t\\t\\t"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\t\\t\\t\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","alert alert-warning"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t\\tError: "],["append",["unknown",["model","error"]],false],["text","\\n\\t\\t\\t\\t\\t\\t\\t"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","row"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","col-sm-4 col-md-3 col-lg-2"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","btn-group"],["static-attr","role","group"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t"],["open-element","button",[]],["static-attr","class","btn btn-success"],["dynamic-attr","disabled",["helper",["if"],[["get",["model","recorder","isRecording"]],"disabled"],null],null],["modifier",["action"],[["get",[null]],"record"]],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t\\tRecord\\t\\n\\t\\t\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t"],["open-element","button",[]],["static-attr","class","btn btn-danger"],["dynamic-attr","disabled",["helper",["unless"],[["get",["model","recorder","isRecording"]],"disabled"],null],null],["modifier",["action"],[["get",[null]],"stop"]],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\t\\t\\tStop\\n\\t\\t\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t\\t"],["open-element","hr",[]],["static-attr","class","visible-xs"],["flush-element"],["close-element"],["text","\\n\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","col-sm-8 col-md-9 col-lg-10"],["flush-element"],["text","\\n\\t\\t\\t\\t\\t\\tTranscript\\n\\t\\t\\t\\t\\t\\t"],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n\\t\\t\\t\\t\\t\\t"],["append",["unknown",["model","transcript"]],false],["text","\\n"],["block",["if"],[["get",["model","error"]]],null,3],["text","\\t\\t\\t\\t\\t"],["close-element"],["text","\\n\\t\\t\\t\\t"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","\\t\\t\\t\\t"],["open-element","div",[]],["static-attr","class","alert alert-danger"],["flush-element"],["text","\\n\\t\\t\\t\\t\\tSpeechRecognition is not available in your browser.\\n\\t\\t\\t\\t"],["close-element"],["text","\\n"]],"locals":[]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/index.hbs"}})}),define("dummy/config/environment",["ember"],function(e){try{var t=document.querySelector('meta[name="dummy/config/environment"]').getAttribute("content"),n=JSON.parse(unescape(t)),l={default:n};return Object.defineProperty(l,"__esModule",{value:!0}),l}catch(e){throw new Error('Could not read config from meta tag with name "dummy/config/environment".')}}),runningTests||require("dummy/app").default.create({name:"ember-speak",version:"0.1.2"});